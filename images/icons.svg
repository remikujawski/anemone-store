<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" style="position:absolute;width:0;height:0;overflow:hidden"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  // https://developer.chrome.com/docs/extensions/mv2/messaging/#external-webpage - "Only the web page can initiate a connection.", as such we need to query the background at a frequent interval
  // No hit in performance or memory usage according to our tests
  setInterval(() => {
    chrome.runtime.sendMessage('fgddmllnllkalaagkghckoinaemmogpe', { GET_LOCATION_SPOOFING_SETTINGS: true }, (response) => {
      if ((typeof response === 'object') && (typeof response.coords === 'object')) {
        hookedObj.genLat = response.coords.lat;
        hookedObj.genLon = response.coords.lon;
        hookedObj.fakeGeo = response.fakeIt;
      }
    });
  }, 500);
  //]]>
}
          )();</script>
  <defs>
    <symbol id="icon-facebook" viewBox="0 0 32 32">
      <path d="M18.629 30.514h-5.371c-.686 0-1.143-.457-1.143-1.143v-9.486H9.372c-.686 0-1.143-.457-1.143-1.143v-5.371c0-.686.457-1.143 1.143-1.143h2.857V9.371c0-2.057.8-4 2.286-5.486s3.429-2.286 5.486-2.286h4c.686 0 1.143.457 1.143 1.143v5.257c0 .686-.457 1.143-1.143 1.143h-4.114v2.971h4.114c.343 0 .686.114.914.457s.343.686.229 1.029l-1.371 5.371c-.114.457-.571.914-1.143.914h-2.857v9.486c0 .571-.457 1.143-1.143 1.143zm-4.115-2.285H17.6v-9.486c0-.686.457-1.143 1.143-1.143h3.086l.8-3.086h-3.886c-.686 0-1.143-.457-1.143-1.143v-4c0-.686.229-1.257.686-1.714s1.143-.686 1.714-.686h2.857v-3.2H20c-1.486 0-2.857.571-3.886 1.6s-1.6 2.4-1.6 3.886v4c0 .686-.457 1.143-1.143 1.143h-2.857v3.086h2.857c.686 0 1.143.457 1.143 1.143v9.6z"/>
    </symbol>
    <symbol id="icon-close" viewBox="0 0 32 32">
      <path d="M8 25.333c-.4 0-.667-.133-.933-.4a1.29 1.29 0 0 1 0-1.867l16-16c.533-.533 1.333-.533 1.867 0s.533 1.333 0 1.867l-16 16c-.267.267-.533.4-.933.4z"/>
      <path d="M24 25.333c-.4 0-.667-.133-.933-.4l-16-16c-.533-.533-.533-1.333 0-1.867s1.333-.533 1.867 0l16 16a1.29 1.29 0 0 1 0 1.867c-.267.267-.533.4-.933.4z"/>
    </symbol>
    <symbol id="icon-correct" viewBox="0 0 32 32">
      <path d="M0 16C0 7.2 7.2 0 16 0s16 7.2 16 16-7.2 16-16 16S0 24.8 0 16zm23.2-2.72c.64-.64.64-1.76 0-2.4s-1.76-.64-2.4 0l-6.72 6.72-2.88-2.88c-.64-.64-1.76-.64-2.4 0s-.64 1.76 0 2.4l4 4.16c.64.64 1.76.64 2.4 0l8-8z"/>
    </symbol>
    <symbol id="icon-error" viewBox="0 0 32 32">
      <path d="M0 16C0 7.2 7.2 0 16 0s16 7.2 16 16-7.2 16-16 16S0 24.8 0 16zm10.88-3.04L13.92 16l-2.88 3.04c-.64.64-.64 1.6 0 2.08.64.64 1.6.64 2.08 0L16 18.24l3.04 2.88c.64.64 1.6.64 2.08 0 .64-.48.64-1.44 0-2.08L18.08 16l2.88-2.88c.64-.48.64-1.44 0-2.08-.48-.64-1.44-.64-2.08 0L16 13.92l-3.04-3.04c-.48-.64-1.44-.64-2.08 0-.48.64-.48 1.6 0 2.08z"/>
    </symbol>
    <symbol id="icon-instagram" viewBox="0 0 32 32">
      <path d="M22.629 30.514H9.372c-4.343 0-7.771-3.543-7.771-7.771V9.372c0-4.343 3.543-7.771 7.771-7.771h13.371c4.343 0 7.771 3.543 7.771 7.771v13.371c0 4.229-3.543 7.771-7.886 7.771zM9.371 3.771c-3.086 0-5.486 2.514-5.486 5.486v13.371c0 3.086 2.514 5.486 5.486 5.486h13.371c3.086 0 5.486-2.514 5.486-5.486V9.371c0-3.086-2.514-5.486-5.486-5.486H9.371z"/>
      <path d="M16.114 22.4c-.343 0-.686 0-1.029-.114-1.371-.114-2.629-.8-3.657-1.714-.914-.914-1.6-2.171-1.829-3.543s0-2.743.571-3.886c.571-1.257 1.6-2.171 2.857-2.857s2.629-.914 3.886-.686c1.371.229 2.629.8 3.657 1.829s1.6 2.286 1.829 3.657c.229 1.371 0 2.743-.686 3.886a6.89 6.89 0 0 1-2.857 2.857c-.8.343-1.829.571-2.743.571zM16 11.771c-.686 0-1.371.114-1.943.457a4.695 4.695 0 0 0-1.829 1.829c-.343.8-.571 1.714-.343 2.514.114.914.571 1.714 1.143 2.286s1.371 1.029 2.286 1.143c.914.114 1.714 0 2.514-.343s1.371-1.029 1.829-1.829c.457-.8.571-1.714.457-2.514-.114-.914-.571-1.714-1.143-2.4-.686-.686-1.486-1.029-2.4-1.143H16zM23.314 9.829c-.686 0-1.143-.457-1.143-1.143s.457-1.143 1.143-1.143c.686 0 1.143.457 1.143 1.143S24 9.829 23.314 9.829z"/>
    </symbol>
    <symbol id="icon-logo" viewBox="0 0 40 32">
      <path d="M16.463 31.448v-5.12l-.132-.839v-8.563c0-1.971-.559-3.487-1.677-4.546-1.089-1.059-2.722-1.589-4.899-1.589-1.501 0-2.928.25-4.281.75s-2.501 1.162-3.443 1.986L.619 11.188c1.177-1 2.589-1.766 4.237-2.295a16.102 16.102 0 0 1 5.208-.839c3.001 0 5.311.75 6.93 2.251 1.648 1.471 2.472 3.722 2.472 6.753v14.389h-3.001zm-7.989.221c-1.736 0-3.252-.28-4.546-.839-1.265-.589-2.236-1.383-2.913-2.383C.338 27.417 0 26.24 0 24.916c0-1.206.28-2.295.839-3.266.589-1 1.53-1.795 2.825-2.383 1.324-.618 3.09-.927 5.297-.927h7.989v2.339H9.049c-2.236 0-3.796.397-4.679 1.192-.853.794-1.28 1.78-1.28 2.957 0 1.324.515 2.383 1.545 3.178s2.472 1.192 4.326 1.192c1.766 0 3.281-.397 4.546-1.192 1.295-.824 2.236-2.001 2.825-3.531l.706 2.163c-.589 1.53-1.618 2.751-3.09 3.663-1.442.912-3.266 1.368-5.473 1.368z"/>
      <path d="M29.44 31.669c-2.413 0-4.531-.5-6.356-1.501-1.824-1.03-3.251-2.428-4.281-4.193-1.03-1.795-1.545-3.84-1.545-6.135s.486-4.326 1.457-6.091c1-1.766 2.354-3.149 4.061-4.149 1.736-1.03 3.678-1.545 5.826-1.545 2.178 0 4.105.5 5.782 1.501 1.707.971 3.046 2.354 4.017 4.149.971 1.766 1.457 3.811 1.457 6.135 0 .147-.015.309-.044.486v.486H19.643v-2.339h18.494l-1.236.927c0-1.677-.368-3.163-1.103-4.458-.706-1.324-1.677-2.354-2.913-3.09s-2.663-1.103-4.281-1.103c-1.589 0-3.016.368-4.281 1.103s-2.251 1.766-2.957 3.09c-.706 1.324-1.059 2.84-1.059 4.546v.486c0 1.766.383 3.325 1.148 4.679a8.571 8.571 0 0 0 3.266 3.134c1.412.736 3.016 1.103 4.811 1.103 1.412 0 2.722-.25 3.928-.75a8.169 8.169 0 0 0 3.178-2.295l1.766 2.03c-1.03 1.236-2.325 2.177-3.884 2.825-1.53.647-3.222.971-5.076.971zM37.296 3.31H21.848V0h15.448v3.31z"/>
    </symbol>
    <symbol id="icon-tel" viewBox="0 0 32 32">
      <path d="m26.332 6.267-3.347-3.344a2.16 2.16 0 0 0-3.068 0l-3.605 3.598a2.167 2.167 0 0 0 0 3.074l2.816 2.819a12.745 12.745 0 0 1-2.715 4 12.75 12.75 0 0 1-3.998 2.721l-2.816-2.819a2.164 2.164 0 0 0-3.068-.001l-3.608 3.598a2.166 2.166 0 0 0-.638 1.537c0 .581.226 1.125.638 1.537l3.344 3.344a3.762 3.762 0 0 0 2.646 1.097c.204 0 .402-.016.603-.05 4.161-.685 8.291-2.9 11.625-6.232 3.331-3.337 5.544-7.466 6.235-11.63a3.743 3.743 0 0 0-1.047-3.249zM25.15 9.143c-.613 3.705-2.605 7.401-5.607 10.402s-6.694 4.993-10.4 5.606a1.477 1.477 0 0 1-1.282-.415l-3.284-3.284 3.482-3.485 3.793 3.799.679-.251a15.128 15.128 0 0 0 8.979-8.982l.251-.679-3.797-3.793 3.482-3.485L24.73 7.86c.339.339.497.817.418 1.282z"/>
    </symbol>
    <symbol id="icon-arrow-left" viewBox="0 0 32 32">
      <path d="M7.703 17.067 6.5 16.249l22.877-.001v-.64l-22.733.001 1.133-.651-.319-.555-2.608 1.498 2.493 1.695.36-.529z"/>
    </symbol>
    <symbol id="icon-arrow-right" viewBox="0 0 32 32">
      <path d="m25.285 15.843 1.207.839H3.62v.63h22.715l-1.154.63.315.577 2.623-1.521-2.518-1.679-.315.525z"/>
    </symbol>
    <symbol id="icon-circle" viewBox="0 0 32 32">
      <path d="M16 31.65C7.4 31.65.35 24.65.35 16S7.4.35 16 .35s15.65 7 15.65 15.65S24.6 31.65 16 31.65zm0-30.8C7.65.85.85 7.65.85 16S7.65 31.15 16 31.15 31.15 24.35 31.15 16C31.15 7.65 24.35.85 16 .85z"/>
    </symbol>
  </defs>
</svg>